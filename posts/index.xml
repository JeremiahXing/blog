<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jeremiah&#39;s Blog</title>
    <link>https://jrmh.dev/posts/</link>
    <description>Recent content in Posts on Jeremiah&#39;s Blog</description>
    <image>
      <title>Jeremiah&#39;s Blog</title>
      <url>https://jrmh.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jrmh.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Dec 2023 14:00:00 +1100</lastBuildDate>
    <atom:link href="https://jrmh.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Primitives</title>
      <link>https://jrmh.dev/posts/linux_primitives/</link>
      <pubDate>Fri, 29 Dec 2023 14:00:00 +1100</pubDate>
      <guid>https://jrmh.dev/posts/linux_primitives/</guid>
      <description>In Linux, these concepts are foundational: You will see lots of faces in the list (like Mounts, Processes, &amp;hellip;) while using containerization tools like Docker. Processes: These are running instances of programs. Linux manages them, allocating resources and scheduling their execution. Mounts: This refers to attaching a file system to a directory, enabling access to files in storage. chroot/pivot_root: These are methods to change the root directory. chroot changes the perceived root directory for a process, while pivot_root is used in system initialization, replacing the old root with a new one.</description>
    </item>
    <item>
      <title>Secure and Low-latency SSH Connection: Setting Up via Tailscale</title>
      <link>https://jrmh.dev/posts/ssh_tailscale/</link>
      <pubDate>Wed, 20 Dec 2023 00:55:00 +1100</pubDate>
      <guid>https://jrmh.dev/posts/ssh_tailscale/</guid>
      <description>Introduction In our interconnected digital age, it&amp;rsquo;s crucial to access our devices securely from any location. This guide will walk you through setting up a VPN with Tailscale, facilitating a seamless and secure connection between an Ubuntu desktop (acting as the server) and a MacBook.
For those in a hurry, jump straight to the instructions. If you&amp;rsquo;re curious, here are some Q&amp;amp;As:
What is SSH? How does SSH help us develop remotely?</description>
    </item>
    <item>
      <title>Understand awk in Linux Shell</title>
      <link>https://jrmh.dev/posts/bash_awk/</link>
      <pubDate>Sun, 17 Dec 2023 00:54:00 +1100</pubDate>
      <guid>https://jrmh.dev/posts/bash_awk/</guid>
      <description>What is awk? awk is a powerful scripting language and command-line utility for text-processing in Unix/Linux environments. It scans each line of a file, looking for patterns that match, and then processes the line accordingly (kinda like reduce in JavaScript but has difference). It&amp;rsquo;s excellent for manipulating structured text data like CSV, logs, or even simple text files.
Basic Syntax The basic syntax of awk is:
awk &amp;#39;pattern {action}&amp;#39; file pattern: A condition to match (like regex or conditional expressions).</description>
    </item>
    <item>
      <title>Shell Pipes: Simplifying Command Line Tasks</title>
      <link>https://jrmh.dev/posts/bash_pipe/</link>
      <pubDate>Sun, 17 Dec 2023 00:00:00 +1100</pubDate>
      <guid>https://jrmh.dev/posts/bash_pipe/</guid>
      <description>Shell pipes are a powerful feature of command-line interfaces in Unix and Unix-like systems, including Linux and macOS. They allow you to pass the output of one command directly into another command, creating a &amp;ldquo;pipeline&amp;rdquo; of operations. This can greatly simplify your tasks and enable efficient data processing. In this post, we&amp;rsquo;ll explore the basics of shell pipes and see some practical examples.
What is a Shell Pipe? A shell pipe, denoted by the | symbol, takes the output (stdout) of one command and uses it as the input (stdin) for the next command.</description>
    </item>
  </channel>
</rss>
